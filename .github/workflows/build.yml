name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # 
  # TODO restore bazel buids: removed to avoid constant failing build. 
  # Restore must be done before merge to main
  #
  build_cmake_Ubuntu_20_04:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up CMake
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake

    - name: Set up dependencies
      run: |
        sudo apt-get install -y protobuf-compiler
        sudo apt-get install -y libboost-all-dev
        sudo apt-get install -y libgtest-dev
        sudo apt-get install -y libopencv-dev
        sudo apt-get install -y libxerces-c3-dev
        sudo apt-get install -y xsdcxx
        
    - name: Create build folder
      run: mkdir build

    - name: Build and test with Cmake
      run: ./MRA-build.py -t --cmake

  build_cmake_Ubuntu_22_04:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up CMake
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake

    - name: Set up dependencies
      run: |
        sudo apt-get install -y protobuf-compiler
        sudo apt-get install -y protobuf-compiler
        sudo apt-get install -y libboost-all-dev
        sudo apt-get install -y libgtest-dev
        sudo apt-get install -y libopencv-dev
        sudo apt-get install -y libxerces-c3-dev
        sudo apt-get install -y xsdcxx


    - name: Create build folder
      run: mkdir build

    - name: Build and test with Cmake
      run: ./MRA-build.py -t --cmake

  build_cmake_Ubuntu_24_04:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up CMake
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake

    - name: Set up dependencies
      run: |
        sudo apt-get install -y protobuf-compiler
        sudo apt-get install -y libboost-all-dev
        sudo apt-get install -y libgtest-dev
        sudo apt-get install -y libopencv-dev
        sudo apt-get install -y libxerces-c3-dev
        sudo apt-get install -y xsdcxx

    - name: Create build folder
      run: mkdir build

    - name: Build and test with Cmake
      run: ./MRA-build.py -t --cmake

