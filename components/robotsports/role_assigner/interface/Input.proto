syntax = "proto3";

package MRA.RobotsportsRoleAssigner;

import "google/protobuf/timestamp.proto";
import "datatypes/Player.proto";
import "datatypes/Ball.proto";
import "datatypes/Obstacle.proto";

message Input
{
	enum GameState
	{
		NONE = 0;
		NORMAL = 1;
		NORMAL_ATTACK = 2;
		NORMAL_DEFEND = 3;
		PARKING = 4;
		BEGIN_POSITION = 5;
		KICKOFF = 6;
		KICKOFF_AGAINST = 7;
		FREEKICK = 8;
		FREEKICK_AGAINST = 9;
		GOALKICK = 10;
		GOALKICK_AGAINST = 11;
		THROWIN = 12;
		THROWIN_AGAINST = 13;
		CORNER = 14;
		CORNER_AGAINST = 15;
		PENALTY = 16;
		PENALTY_AGAINST = 17;
		PENALTY_SHOOTOUT = 18;
		PENALTY_SHOOTOUT_AGAINST = 19;
		DROPPED_BALL = 20;
		YELLOW_CARD_AGAINST = 21;
		RED_CARD_AGAINST = 22;
		GOAL = 23;
		GOAL_AGAINST = 24;
	}

    MRA.Datatypes.Player robot = 1; // self
    GameState gamestate = 2;
    repeated MRA.Datatypes.Ball ball = 3; // allow maximum one ball in the field/test; if there are more, then WorldModel should provide closest one, can be none.
    repeated MRA.Datatypes.Player teammates = 4;
    // TODO: 
    //  - passed ball is missing in Player.
    //  - player_type_e player_type;  (keeper, reserve, fieldplayer)
    //  - time_in_own_penalty_area;   (state ?)
    //  - time_in_opponent_penalty_area; (state)
    //  - current role.  (state)
    
    repeated MRA.Datatypes.Player opponents = 5;
}

