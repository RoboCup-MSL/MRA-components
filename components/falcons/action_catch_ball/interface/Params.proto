syntax = "proto3";

package MRA.FalconsActionCatchBall;

message Params
{
    // only respond to ball trajectory if it is expected to come close enough
    // if too far, then action will return FAILED
    double captureRadius = 1; // [m]

    // only respond to balls which are coming sufficiently fast
    // if too slow, then action will return FAILED
    double ballSpeedThreshold = 2; // [m/s]

    // default/legacy behavior is to move sideways ("strafe")
    // proactive mode will optimize, which leads to forward movemement when ball is approaching slow, which is useful when opponent is nearby
    bool proactive = 3;

    // assumed robot speed to use when calculation ball interception point
    // only used in proactive mode
    // (roadmap: get this configuration from some other config file or even runtime, using trajectory generator?)
    double robotCatchSpeed = 4; // [m/s]

    // extrapolate ball vector with this duration, similar to 'getBallOnVector'
    // only used in proactive mode
    double ballVectorExtrapolation = 5; // [s]
}
