syntax = "proto3";

package MRA.FalconsMotionPlanning;

import "datatypes/Point.proto";
import "datatypes/PosVel.proto";
import "datatypes/WorldState.proto";

enum ActionType
{
    ACTION_STOP = 0;
    ACTION_MOVE = 1;
    ACTION_KICK = 2;
    ACTION_PASS = 3;
    ACTION_SHOOT = 4;
    ACTION_LOB = 5;
    ACTION_GETBALL = 6;
    ACTION_SHIELD = 7; // a.k.a. TURN_AWAY_FROM_OPPONENT
    ACTION_KEEPER = 8;
    ACTION_INTERCEPT = 9;
}

message ActionStopInputs
{
    bool ballHandlersEnabled = 1;
}

message ActionMoveInputs
{
    MRA.Datatypes.PosVel target = 1;
    int32 motionType = 2; // optional
    bool ballHandlersEnabled = 3;
}

message ActionKickInputs
{
    float power = 1;
    float height = 2;
}

message ActionPassInputs
{
    MRA.Datatypes.PosVel target = 1; // typically only using pos.x and pos.y
}

message ActionShootInputs
{
    MRA.Datatypes.PosVel target = 1; // typically only using pos.x, pos.y and pos.z
}

message ActionLobShotInputs
{
    MRA.Datatypes.PosVel target = 1; // typically only using pos.x, pos.y and pos.z
}

message ActionGetBallInputs
{
    int32 motionType = 1; // optional
    float radius = 2; // optional
}

message ActionShieldInputs
{
}

message ActionKeeperInputs
{
}

message ActionInterceptInputs
{
    float radius = 2; // optional
}

message ActionInputs
{
    ActionType type = 1;
    oneof inputs
    {
        ActionStopInputs stop = 2;
        ActionMoveInputs move = 3;
        ActionKickInputs kick = 4;
        ActionPassInputs pass = 5;
        ActionShootInputs shoot = 6;
        ActionLobShotInputs lob = 7;
        ActionGetBallInputs getball = 8;
        ActionShieldInputs shield = 9;
        ActionKeeperInputs keeper = 10;
        ActionInterceptInputs intercept = 11;
    }
}

message ForbiddenArea
{
    repeated MRA.Datatypes.Point points = 1;
}

message Input
{
    ActionInputs action = 1;
    MRA.Datatypes.WorldState worldState = 2;
    repeated ForbiddenArea forbiddenAreas = 3;
}

